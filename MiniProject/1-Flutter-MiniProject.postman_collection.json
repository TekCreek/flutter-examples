{
	"info": {
		"_postman_id": "a68b0676-56c5-473c-bf2e-b11df1737917",
		"name": "1-Flutter-MiniProject",
		"description": "Tests for user signup, login, and authenticated post CRUD operations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3082882"
	},
	"item": [
		{
			"name": "User Signup",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"Password123\",\n    \"firstname\": \"Test\",\n    \"lastname\": \"User\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/users/signup",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"users",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "User Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.code === 200) {",
							"  const jsonData = pm.response.json();",
							"  if (jsonData.token) {",
							"    pm.environment.set(\"token\", jsonData.token);",
							"    console.log(\"Token saved to environment variable 'token'\");",
							"  } else {",
							"    console.warn(\"Token not found in response\");",
							"  }",
							"} else {",
							"  console.error(\"Login request failed, status code: \" + pm.response.code);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"Password123\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/users/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Post",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Get token from environment variable",
							"if(!pm.environment.get('token')) {",
							"    throw new Error('Token not set. Please login first.');",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"My First Post\",\n    \"description\": \"This is a sample post created via API.\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/posts",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Posts",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/posts",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Single Post",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/posts/{{postId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"posts",
						"{{postId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Post",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Updated Post Title\",\n    \"description\": \"Updated description here.\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/posts/{{postId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"posts",
						"{{postId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Post",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/posts/{{postId}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"posts",
						"{{postId}}"
					]
				}
			},
			"response": []
		}
	]
}